---

- name: Remove existing CNAME DNS record
  community.general.cloudflare_dns:
    api_token: '{{ lookup("vars", role_prefix + "_cloudflare_api_token") }}'
    zone: '{{ lookup("vars", role_prefix + "_traefik_domain") }}'
    state: absent
    type: CNAME
    record: '{{ lookup("vars", role_prefix + "_traefik_subdomain") }}'

- name: Remove existing A DNS record
  community.general.cloudflare_dns:
    api_token: '{{ lookup("vars", role_prefix + "_cloudflare_api_token") }}'
    zone: '{{ lookup("vars", role_prefix + "_traefik_domain") }}'
    state: absent
    type: A
    record: '{{ lookup("vars", role_prefix + "_traefik_subdomain") }}'

- name: Get public ip for DNS tasks
  block:
    - name: Get public IP
      community.general.ipify_facts:
        timeout: 20
      delegate_to: localhost
      register: public_ip

    - name: Public IP output
      ansible.builtin.debug:
        msg: '{{ ipify_public_ip }}'

- name: Add DNS record
  community.general.cloudflare_dns:
    api_token: '{{ lookup("vars", role_prefix + "_cloudflare_api_token") }}'
    zone: '{{ lookup("vars", role_prefix + "_traefik_domain") }}'
    state: present
    solo: true
    proxied: '{{ lookup("vars", role_prefix + "_cloudflare_proxy") }}'
    type: '{{ lookup("vars", role_prefix + "_cloudflare_record_type") }}'
    value: '{{ ipify_public_ip }}' 
    record: '{{ lookup("vars", role_prefix + "_traefik_subdomain") }}'
  register: whisparr_cloudflare_record_creation_status

- name: Tasks on success
  when: whisparr_cloudflare_record_creation_status is succeeded
  block:
    - name: Set 'dns_record_print' variable
      ansible.builtin.set_fact:
        whisparr_cloudflare_record_print: '{{ (lookup("vars", role_prefix + "_traefik_subdomain") == lookup("vars", role_prefix + "_traefik_domain")) | ternary(lookup("vars", role_prefix + "_traefik_domain"), lookup("vars", role_prefix + "_traefik_subdomain") + "." + lookup("vars", role_prefix + "_traefik_domain")) }}'

    - name: Display DNS record creation status
      ansible.builtin.debug:
        msg: 'DNS A Record for "{{ whisparr_cloudflare_record_print }}" set to "{{ ipify_public_ip }}" was added. Proxy: {{ lookup("vars", role_prefix + "_cloudflare_proxy") }}'
