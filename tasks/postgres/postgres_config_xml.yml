---

- name: Whisparr config.xml | Check config.xml
  block:
    - name: Whisparr config.xml | Lookup PostgresUser value
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        xpath: /Config/PostgresUser
        print_match: true
      register: xml_whisparr_postgresuser

    - name: Whisparr config.xml | Lookup PostgresPassword value
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        xpath: /Config/PostgresPassword
        print_match: true
      register: xml_whisparr_postgrespassword

    - name: Whisparr config.xml | Lookup PostgresPort value
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        xpath: /Config/PostgresPort
        print_match: true
      register: xml_whisparr_postgresport

    - name: Whisparr config.xml | Lookup PostgresHost value
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        xpath: /Config/PostgresHost
        print_match: true
      register: xml_whisparr_postgreshost

    - name: Whisparr config.xml | Lookup PostgresMainDb value
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        xpath: /Config/PostgresMainDb
        print_match: true
      register: xml_whisparr_postgresmaindb

    - name: Whisparr config.xml | Lookup PostgresLogDb value
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        xpath: /Config/PostgresLogDb
        print_match: true
      register: xml_whisparr_postgreslogdb

- name: Modify config.xml with postgres values
  block:
    - name: whisparr.xml | Adding PostgresUser
      when: ((xml_whisparr_postgresuser.matches[0].PostgresUser is not defined) or
             (xml_whisparr_postgresuser.matches[0].PostgresUser != whisparr_postgres_auth_user ))
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        pretty_print: true
        xpath: /Config/PostgresUser
        value: '{{ whisparr_postgres_auth_user }}'

    - name: Whisparr.xml | Adding PostgresPassword
      when: ((xml_whisparr_postgrespassword.matches[0].PostgresPassword is not defined) or
             (xml_whisparr_postgrespassword.matches[0].PostgresPassword != whisparr_postgres_auth_password ))
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        pretty_print: true
        xpath: /Config/PostgresPassword
        value: '{{ whisparr_postgres_auth_password }}'

    - name: Whisparr.xml | Adding PostgresPort
      when: ((xml_whisparr_postgresport.matches[0].PostgresPort is not defined) or
             (xml_whisparr_postgresport.matches[0].PostgresPort != whisparr_postgres_ports_cont ))
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        pretty_print: true
        xpath: /Config/PostgresPort
        value: '{{ whisparr_postgres_ports_cont }}'

    - name: Whisparr.xml | Adding PostgresHost
      when: ((xml_whisparr_postgreshost.matches[0].PostgresHost is not defined) or
             (xml_whisparr_postgreshost.matches[0].PostgresHost != whisparr_postgres_basics_name ))
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        pretty_print: true
        xpath: /Config/PostgresHost
        value: '{{ whisparr_postgres_basics_name }}'

    - name: Whisparr.xml | Adding PostgresMainDb
      when: ((xml_whisparr_postgresmaindb.matches[0].PostgresMainDb is not defined) or
             (xml_whisparr_postgresmaindb.matches[0].PostgresMainDb != whisparr_postgres_database_main ))
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        pretty_print: true
        xpath: /Config/PostgresMainDb
        value: '{{ whisparr_postgres_database_main }}'

    - name: Whisparr.xml | Adding PostgresLogDb
      when: ((xml_whisparr_postgreslogdb.matches[0].PostgresLogDb is not defined) or
             (xml_whisparr_postgreslogdb.matches[0].PostgresLogDb != whisparr_postgres_database_log ))
      community.general.xml:
        path: '{{ whisparr_paths_location }}/config.xml'
        pretty_print: true
        xpath: /Config/PostgresLogDb
        value: '{{ whisparr_postgres_database_log }}'

- name: Clean whisparr appdir
  block:
    - name: Remove sqlite database files
      when: whisparr_postgres_clean_files
      ansible.builtin.file:
        path: '{{ whisparr_paths_location }}/{{ item }}'
        state: absent
      loop:
        - logs.db
        - logs.db-shm
        - logs.db-wal
        - whisparr.db
        - whisparr.db-shm
        - whisparr.db-wal

    - name: Remove sqlite backups folder
      when: whisparr_postgres_clean_folders
      ansible.builtin.file:
        path: '{{ whisparr_paths_location }}/Backups'
        state: absent
